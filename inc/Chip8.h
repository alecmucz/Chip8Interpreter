//
// Created by amucz0 on 11/7/24.
//

#ifndef CHIP8INTERPRETER_CHIP8_H
#define CHIP8INTERPRETER_CHIP8_H

#include <iostream>
#include <cstring>
#include <cstdint>
#include <iomanip>
#include <cstdlib>
#define BLUE    "\033[34m"
#define YELLOW  "\033[33m"
#define GREEN   "\033[32m"
#define RESET   "\033[0m"


using namespace std;

class Chip8 {
private:
    uint8_t memory[4096];
    uint8_t display[64 * 32];    //possibly change to 1d array, see if/how 2d works with SDL
    uint8_t keypad[16];
    uint8_t gpr[16];
    uint16_t opcode;
    uint16_t pc;
    uint16_t i;
    uint16_t stack[16];
    uint8_t sp;
    uint8_t delayTimer;
    uint8_t soundTimer;

    const uint8_t fonts[80] = {
            0xF0, 0x90, 0x90, 0x90, 0xF0, // 0
            0x20, 0x60, 0x20, 0x20, 0x70, // 1
            0xF0, 0x10, 0xF0, 0x80, 0xF0, // 2
            0xF0, 0x10, 0xF0, 0x10, 0xF0, // 3
            0x90, 0x90, 0xF0, 0x10, 0x10, // 4
            0xF0, 0x80, 0xF0, 0x10, 0xF0, // 5
            0xF0, 0x80, 0xF0, 0x90, 0xF0, // 6
            0xF0, 0x10, 0x20, 0x40, 0x40, // 7
            0xF0, 0x90, 0xF0, 0x90, 0xF0, // 8
            0xF0, 0x90, 0xF0, 0x10, 0xF0, // 9
            0xF0, 0x90, 0xF0, 0x90, 0x90, // A
            0xE0, 0x90, 0xE0, 0x90, 0xE0, // B
            0xF0, 0x80, 0x80, 0x80, 0xF0, // C
            0xE0, 0x90, 0x90, 0x90, 0xE0, // D
            0xF0, 0x80, 0xF0, 0x80, 0xF0, // E
            0xF0, 0x80, 0xF0, 0x80, 0x80  // F
    };
private:
    void memDump();

public:
    void init();
    [[noreturn]] void executionCycle();
};

#endif //CHIP8INTERPRETER_CHIP8_H
